package de.fleigm.transitrouter.feeds.evaluation;

import com.fasterxml.jackson.databind.ObjectMapper;
import de.fleigm.transitrouter.feeds.GeneratedFeedRepository;
import io.quarkus.test.junit.QuarkusTest;

import javax.inject.Inject;
import java.io.IOException;
import java.nio.file.Path;
import java.util.Optional;

@QuarkusTest
class MinifyShapevlReportTest {

  @Inject
  GeneratedFeedRepository feeds;

  @Inject
  ObjectMapper objectMapper;


  //@Test
  void asd() {
    GeneratedFeedRepository feeds = new GeneratedFeedRepository(Path.of("/home/michi-pc/uni/bachelor/project/michael-fleig/storage"), objectMapper);

    feeds.all().stream()
        .map(feed -> feed.getExtension(Evaluation.class))
        .flatMap(Optional::stream)
        .map(Evaluation::getReport)
        .forEach(path -> {
          try {
            MinifyShapevlReport.minify(path);
          } catch (IOException e) {
            e.printStackTrace();
          }
        });
  }

  //@Test
  void qwe() {
    String s = "5560420.T3.31-556-j20-1.2.R\t0.05\t0.0603038\t50.2499\tMULTILINESTRING ((1.01638e+06 6.26815e+06, 1.0165e+06 6.26815e+06, 1.01655e+06 6.26816e+06, 1.01658e+06 6.26815e+06, 1.01662e+06 6.26816e+06, 1.01666e+06 6.26818e+06, 1.01668e+06 6.2682e+06, 1.0167e+06 6.26824e+06, 1.01668e+06 6.26832e+06, 1.01669e+06 6.26833e+06, 1.01669e+06 6.26834e+06, 1.01668e+06 6.26835e+06, 1.01667e+06 6.26835e+06, 1.01666e+06 6.26835e+06, 1.01665e+06 6.26833e+06, 1.01658e+06 6.26831e+06, 1.01654e+06 6.2683e+06, 1.01659e+06 6.26816e+06, 1.01662e+06 6.26807e+06, 1.01664e+06 6.26798e+06, 1.01665e+06 6.26792e+06, 1.01664e+06 6.26783e+06, 1.01663e+06 6.26778e+06, 1.01661e+06 6.26773e+06, 1.01658e+06 6.26767e+06, 1.01656e+06 6.26763e+06, 1.01652e+06 6.26761e+06, 1.0165e+06 6.26762e+06, 1.0163e+06 6.26772e+06, 1.01623e+06 6.26774e+06, 1.01616e+06 6.26775e+06, 1.016e+06 6.26776e+06, 1.01597e+06 6.2677e+06, 1.01582e+06 6.26752e+06, 1.01582e+06 6.26752e+06), (1.01582e+06 6.26752e+06, 1.0156e+06 6.26716e+06), (1.0156e+06 6.26716e+06, 1.0156e+06 6.26716e+06, 1.01557e+06 6.26713e+06, 1.01553e+06 6.26704e+06, 1.01544e+06 6.26687e+06, 1.01542e+06 6.26682e+06, 1.01541e+06 6.26682e+06, 1.0154e+06 6.26681e+06, 1.01541e+06 6.26679e+06, 1.01543e+06 6.26679e+06, 1.01545e+06 6.26676e+06, 1.01547e+06 6.26674e+06), (1.01547e+06 6.26674e+06, 1.01547e+06 6.26674e+06, 1.01551e+06 6.26671e+06, 1.01546e+06 6.2666e+06, 1.01543e+06 6.26649e+06), (1.01543e+06 6.26649e+06, 1.01543e+06 6.26649e+06, 1.01542e+06 6.26647e+06, 1.0154e+06 6.26644e+06, 1.01536e+06 6.26641e+06, 1.01534e+06 6.26635e+06, 1.01533e+06 6.26633e+06, 1.01506e+06 6.26633e+06, 1.01505e+06 6.26634e+06, 1.01505e+06 6.26635e+06, 1.01503e+06 6.26635e+06, 1.01502e+06 6.26634e+06, 1.01502e+06 6.26633e+06, 1.01499e+06 6.26632e+06, 1.01492e+06 6.26626e+06, 1.01488e+06 6.26624e+06, 1.01484e+06 6.26623e+06, 1.01477e+06 6.26625e+06, 1.01476e+06 6.26621e+06, 1.01474e+06 6.26618e+06, 1.0147e+06 6.26613e+06, 1.01464e+06 6.2661e+06, 1.01458e+06 6.26607e+06, 1.01446e+06 6.26604e+06, 1.01439e+06 6.26603e+06, 1.01426e+06 6.26604e+06, 1.01414e+06 6.26607e+06, 1.01412e+06 6.26606e+06, 1.01411e+06 6.26605e+06, 1.0141e+06 6.26602e+06, 1.01408e+06 6.26592e+06, 1.01407e+06 6.26583e+06, 1.01413e+06 6.26582e+06, 1.01416e+06 6.26581e+06, 1.01416e+06 6.26578e+06, 1.01416e+06 6.26573e+06, 1.01416e+06 6.26571e+06, 1.01414e+06 6.26569e+06, 1.01409e+06 6.26567e+06, 1.01408e+06 6.26565e+06, 1.01406e+06 6.26565e+06, 1.01406e+06 6.26564e+06, 1.01373e+06 6.26571e+06), (1.01373e+06 6.26571e+06, 1.01373e+06 6.26571e+06, 1.01361e+06 6.26574e+06, 1.01318e+06 6.26589e+06, 1.01314e+06 6.26589e+06), (1.01314e+06 6.26589e+06, 1.01314e+06 6.26589e+06, 1.01312e+06 6.26589e+06, 1.01309e+06 6.26587e+06, 1.01307e+06 6.26584e+06, 1.01305e+06 6.2658e+06, 1.01303e+06 6.26575e+06, 1.01303e+06 6.26573e+06, 1.01303e+06 6.2657e+06, 1.01303e+06 6.26566e+06, 1.01297e+06 6.26564e+06, 1.01286e+06 6.26565e+06, 1.01268e+06 6.26564e+06), (1.01268e+06 6.26564e+06, 1.01268e+06 6.26564e+06, 1.01264e+06 6.26563e+06, 1.01263e+06 6.26562e+06, 1.01264e+06 6.26549e+06, 1.01264e+06 6.26539e+06), (1.01264e+06 6.26539e+06, 1.01264e+06 6.26539e+06, 1.01264e+06 6.26538e+06, 1.01215e+06 6.26532e+06, 1.01215e+06 6.26532e+06), (1.01215e+06 6.26532e+06, 1.01201e+06 6.26531e+06, 1.01198e+06 6.2653e+06, 1.01195e+06 6.26527e+06, 1.01194e+06 6.26522e+06, 1.01199e+06 6.26508e+06, 1.01199e+06 6.26508e+06), (1.01199e+06 6.26508e+06, 1.01201e+06 6.26502e+06, 1.01205e+06 6.26498e+06, 1.01209e+06 6.26493e+06, 1.01223e+06 6.265e+06, 1.01223e+06 6.265e+06), (1.01223e+06 6.265e+06, 1.01227e+06 6.26502e+06, 1.01251e+06 6.265e+06, 1.01258e+06 6.26499e+06, 1.01256e+06 6.26495e+06, 1.01256e+06 6.26495e+06), (1.01256e+06 6.26495e+06, 1.01253e+06 6.26484e+06, 1.0125e+06 6.26469e+06, 1.01261e+06 6.26466e+06, 1.01266e+06 6.26466e+06, 1.01278e+06 6.26468e+06, 1.01284e+06 6.26467e+06), (1.01284e+06 6.26467e+06, 1.01284e+06 6.26467e+06, 1.01309e+06 6.26462e+06, 1.01326e+06 6.26462e+06, 1.01333e+06 6.26463e+06), (1.01333e+06 6.26463e+06, 1.01333e+06 6.26463e+06, 1.01341e+06 6.26465e+06, 1.01339e+06 6.26471e+06, 1.01331e+06 6.26488e+06, 1.01328e+06 6.26495e+06, 1.01322e+06 6.26516e+06, 1.0132e+06 6.26527e+06, 1.01325e+06 6.26528e+06, 1.01325e+06 6.26528e+06), (1.01325e+06 6.26528e+06, 1.01332e+06 6.26529e+06, 1.01364e+06 6.26525e+06, 1.01369e+06 6.26524e+06, 1.01369e+06 6.26524e+06), (1.01369e+06 6.26524e+06, 1.01377e+06 6.26522e+06, 1.01388e+06 6.2652e+06, 1.01392e+06 6.26517e+06), (1.01392e+06 6.26517e+06, 1.01392e+06 6.26517e+06, 1.01394e+06 6.26516e+06, 1.01395e+06 6.26516e+06, 1.01396e+06 6.26517e+06, 1.01397e+06 6.26522e+06, 1.01404e+06 6.26538e+06, 1.01405e+06 6.26545e+06, 1.01406e+06 6.26561e+06, 1.01406e+06 6.26562e+06, 1.01407e+06 6.26562e+06, 1.01408e+06 6.26562e+06, 1.01409e+06 6.26563e+06, 1.01413e+06 6.26562e+06, 1.01413e+06 6.26562e+06), (1.01413e+06 6.26562e+06, 1.01422e+06 6.26557e+06, 1.01426e+06 6.26556e+06, 1.01433e+06 6.26557e+06, 1.01445e+06 6.2656e+06, 1.0145e+06 6.26561e+06, 1.01476e+06 6.26555e+06, 1.01496e+06 6.26553e+06, 1.0153e+06 6.26553e+06, 1.01545e+06 6.26555e+06, 1.01578e+06 6.26556e+06, 1.01586e+06 6.26559e+06, 1.01622e+06 6.26575e+06, 1.01635e+06 6.2658e+06, 1.01653e+06 6.26586e+06, 1.0167e+06 6.26595e+06, 1.0167e+06 6.26595e+06), (1.0167e+06 6.26595e+06, 1.01686e+06 6.26604e+06, 1.01692e+06 6.26608e+06, 1.01694e+06 6.26612e+06, 1.01696e+06 6.26621e+06, 1.01697e+06 6.26624e+06, 1.01699e+06 6.26627e+06, 1.01701e+06 6.26625e+06, 1.01704e+06 6.26623e+06))\n";
    String substring = s.substring(0, s.lastIndexOf("\t"));

    int a = 2;
  }

}